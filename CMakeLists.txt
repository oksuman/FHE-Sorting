cmake_minimum_required(VERSION 3.5.1)
project(fherma_array_sorting_dev CXX)

################################
# Added by Seunghu Kim
set(BENCHMARK_ENABLE_ASSEMBLY_TESTS OFF)
set(HAVE_STD_REGEX 1)
set(BENCHMARK_ENABLE_GTEST OFF)
set(BENCHMARK_ENABLE_TESTING OFF)
set(BENCHMARK_ENABLE_WERROR OFF)
set(BENCHMARK_USE_BUNDLED_GTEST OFF)

if(APPLE)
if(CMAKE_C_COMPILER_ID MATCHES "Clang")
set(OpenMP_C "${CMAKE_C_COMPILER}")
set(OpenMP_C_FLAGS "-Xpreprocessor -fopenmp -I/opt/homebrew/opt/libomp/include")
set(OpenMP_C_LIB_NAMES "omp")
set(OpenMP_omp_LIBRARY /opt/homebrew/opt/libomp/lib/libomp.dylib)
endif()
if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
set(OpenMP_CXX "${CMAKE_CXX_COMPILER}")
set(OpenMP_CXX_FLAGS "-Xpreprocessor -fopenmp -I/opt/homebrew/opt/libomp/include")
set(OpenMP_CXX_LIB_NAMES "omp")
set(OpenMP_omp_LIBRARY /opt/homebrew/opt/libomp/lib/libomp.dylib)
endif()
endif()
################################

enable_testing()
add_subdirectory(third_party/googletest)
include(GoogleTest)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
option(BUILD_STATIC "Set to ON to include static versions of the library" OFF)
find_package(OpenFHE)
set(CMAKE_CXX_FLAGS "${OpenFHE_CXX_FLAGS} ${CMAKE_CXX_FLAGS}")
find_package(OpenMP REQUIRED)
if(OpenMP_CXX_FOUND)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()
include_directories(${OPENMP_INCLUDES})
include_directories(${OpenFHE_INCLUDE})
include_directories(${OpenFHE_INCLUDE}/third-party/include)
include_directories(${OpenFHE_INCLUDE}/core)
include_directories(${OpenFHE_INCLUDE}/pke)
include_directories(${OpenFHE_INCLUDE}/binfhe)
link_directories(${OpenFHE_LIBDIR})
link_directories(${OPENMP_LIBRARIES})
if (BUILD_STATIC)
set(CMAKE_EXE_LINKER_FLAGS "${OpenFHE_EXE_LINKER_FLAGS} -static")
link_libraries(${OpenFHE_STATIC_LIBRARIES} OpenMP::OpenMP_CXX)
else ()
set(CMAKE_EXE_LINKER_FLAGS ${OpenFHE_EXE_LINKER_FLAGS})
link_libraries(${OpenFHE_SHARED_LIBRARIES} OpenMP::OpenMP_CXX)
endif ()
set(ENABLE_PRINT_PT ON CACHE BOOL "Enable PRINT_PT macro")
if(ENABLE_PRINT_PT)
add_definitions(-DENABLE_PRINT_PT)
endif()
include_directories(${CMAKE_SOURCE_DIR}/app)
include_directories(${CMAKE_CURRENT_BINARY_DIR}/utils)
add_subdirectory(app)
add_subdirectory(tests)
add_subdirectory(third_party/benchmark)
add_subdirectory(benchmarks)
add_subdirectory(utils)