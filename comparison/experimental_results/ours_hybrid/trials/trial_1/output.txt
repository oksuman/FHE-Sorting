Running main() from /home/ml/dev/Seunghu/FHE-Sorting/third_party/googletest/googletest/src/gtest_main.cc
[==========] Running 9 tests from 9 test suites.
[----------] Global test environment set-up.
[----------] 1 test from HybridSort/HybridSortTestFixture/0, where TypeParam = std::integral_constant<unsigned long,4ul>
[ RUN      ] HybridSort/HybridSortTestFixture/0.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 26
Debug: sizeQP = 33
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 26
Debug: sizeQP = 33
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 26
Debug: sizeQP = 33
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 26
Debug: sizeQP = 2633
Debug: sizeQP = 33

Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 26
Debug: sizeQP = 33
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = Debug: numPerPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = Debug: startPartIdx = 00, endPartIdx = 9, endPartIdx = 9

Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 0
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 18, endPartIdx = 26
Debug: startPartIdx = 18, endPartIdx = 26
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 26
Debug: startPartIdx = 18, endPartIdx = 26
Debug: startPartIdx = 18, endPartIdx = 26
Debug: startPartIdx = 18, endPartIdx = 26
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 26
Debug: sizeQP = 33
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 26
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 4
Using Ring Dimension: 131072
Multiplicative depth: 24
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 2, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 7
Debug: sizeQlP = 32
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 32
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 7
Debug: sizeQlP = 30
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 30
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 7
Debug: sizeQlP = 30
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 30
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 7
Debug: sizeQlP = 30
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 30
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 7
Debug: sizeQlP = 29
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 29
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 7
Debug: sizeQlP = 27
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 27
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 7
Debug: sizeQlP = 27
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 27
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 7
Debug: sizeQlP = 27
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 27
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 7
Debug: sizeQlP = 26
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 26
Debug: sizeQ = 26
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 7
Debug: sizeQlP = 24
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 24
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 7
Debug: sizeQlP = 24
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 24
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 7
Debug: sizeQlP = 24
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 24
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 7
Debug: sizeQlP = 23
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 23
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 7
Debug: sizeQlP = 21
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 21
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 7
Debug: sizeQlP = 21
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 21
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 7
Debug: sizeQlP = 21
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 21
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 7
Debug: sizeQlP = 19
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 19
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 7
Debug: sizeQlP = 19
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 19
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 7
Debug: sizeQlP = 17
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 17
Debug: sizeQ = 26
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 7
Debug: sizeQlP = 15
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 15
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 7
Debug: sizeQlP = 15
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 15
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 7
Debug: sizeQlP = 12
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 12
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 7
Debug: sizeQlP = 12
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 12
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 26
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed

Performance Analysis:
Execution time: 21470 ms

Error Analysis:
Maximum error: 5.41602e-07 (log2: -20.8163)
Average error: 3.24743e-07 (log2: -21.5542)
Number of errors larger than 0.01: 0
[       OK ] HybridSort/HybridSortTestFixture/0.SortHybridTest (28762 ms)
[----------] 1 test from HybridSort/HybridSortTestFixture/0 (28762 ms total)

[----------] 1 test from HybridSort/HybridSortTestFixture/1, where TypeParam = std::integral_constant<unsigned long,8ul>
[ RUN      ] HybridSort/HybridSortTestFixture/1.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)

Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 8
Using Ring Dimension: 131072
Multiplicative depth: 25
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 2, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 7
Debug: sizeQlP = 34
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 34
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 18, endPartIdx = 26
Debug: Processing CRT basis switching part 2
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 7
Debug: sizeQlP = 32
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 32
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 7
Debug: sizeQlP = 30
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 30
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 7
Debug: sizeQlP = 29
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 29
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 7
Debug: sizeQlP = 27
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 27
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 7
Debug: sizeQlP = 26
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 26
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 7
Debug: sizeQlP = 24
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 24
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 7
Debug: sizeQlP = 23
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 23
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 7
Debug: sizeQlP = 21
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 21
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 7
Debug: sizeQlP = 18
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 18
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 7
Debug: sizeQlP = 17
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 17
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 7
Debug: sizeQlP = 17
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 17
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 7
Debug: sizeQlP = 15
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 15
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 7
Debug: sizeQlP = 15
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 15
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 7
Debug: sizeQlP = 12
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 12
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 7
Debug: sizeQlP = 12
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 12
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed

Performance Analysis:
Execution time: 24105 ms

Error Analysis:
Maximum error: 7.13022e-07 (log2: -20.4196)
Average error: 4.56521e-07 (log2: -21.0628)
Number of errors larger than 0.01: 0
[       OK ] HybridSort/HybridSortTestFixture/1.SortHybridTest (33275 ms)
[----------] 1 test from HybridSort/HybridSortTestFixture/1 (33275 ms total)

[----------] 1 test from HybridSort/HybridSortTestFixture/2, where TypeParam = std::integral_constant<unsigned long,16ul>
[ RUN      ] HybridSort/HybridSortTestFixture/2.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 18, endPartIdx = 27
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Created sNewExt
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: Processing part 1
Debug: Processing part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 18, endPartIdx = 27
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 1
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Processing part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 27
Debug: sizeQP = 34
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 9
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 16
Using Ring Dimension: 131072
Multiplicative depth: 25
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 2, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 7
Debug: sizeQlP = 34
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::KeySwitchInPlaceUsing KeySwitchHYBRID::EvalKeySwitchPrecomputeCore

Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 7
Debug: sizeQlP = 34
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizeQl = 27
Debug: sizeP = 7
Debug: sizeQlP = 34
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 0
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 0
Debug: sizePartQl = 9, startPartIdx = 9
Debug: sizePartQl = 9, startPartIdx = 18
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 34
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 34
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: startPartIdx = 18, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 34
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 7
Debug: sizeQlP = 33
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 9, endPartIdx = 18
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 2
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 18, endPartIdx = 26
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 1 of 3
Debug: startPartIdx = 18, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 33
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 7
Debug: sizeQlP = 32
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 32
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 7
Debug: sizeQlP = 31
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 31
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 7
Debug: sizeQlP = 30
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 30
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 7
Debug: sizeQlP = 29
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 29
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 7
Debug: sizeQlP = 28
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 28
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 7
Debug: sizeQlP = 27
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 27
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 7
Debug: sizeQlP = 26
Debug: alpha = 9
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 18
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 18, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 26
Debug: sizeQ = 27
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 7
Debug: sizeQlP = 25
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 25
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 7
Debug: sizeQlP = 24
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 24
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 7
Debug: sizeQlP = 23
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 23
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 7
Debug: sizeQlP = 22
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 22
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 7
Debug: sizeQlP = 21
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 21
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 7
Debug: sizeQlP = 20
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 20
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 7
Debug: sizeQlP = 18
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 18
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 7
Debug: sizeQlP = 17
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 17
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 7
Debug: sizeQlP = 17
Debug: alpha = 9
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 9
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 9, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 17
Debug: sizeQ = 27
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 7
Debug: sizeQlP = 16
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 16
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 7
Debug: sizeQlP = 15
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 15
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 7
Debug: sizeQlP = 12
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 12
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 7
Debug: sizeQlP = 14
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 14
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 7
Debug: sizeQlP = 13
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 13
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 7
Debug: sizeQlP = 12
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 12
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 7
Debug: sizeQlP = 11
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 11
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 7
Debug: sizeQlP = 10
Debug: alpha = 9
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 10
Debug: sizeQ = 27
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 10, format: 0
Debug: cTilda1 elements: 10, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 10
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 10
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed

Performance Analysis:
Execution time: 27035 ms

Error Analysis:
Maximum error: 1.35162e-06 (log2: -19.4969)
Average error: 6.42712e-07 (log2: -20.5693)
Number of errors larger than 0.01: 0
[       OK ] HybridSort/HybridSortTestFixture/2.SortHybridTest (37124 ms)
[----------] 1 test from HybridSort/HybridSortTestFixture/2 (37124 ms total)

[----------] 1 test from HybridSort/HybridSortTestFixture/3, where TypeParam = std::integral_constant<unsigned long,32ul>
[ RUN      ] HybridSort/HybridSortTestFixture/3.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)Debug: sizeQ = 
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)31

Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: startPartIdx = 22, endPartIdx = 31
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 31
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNew format to COEFFICIENT
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Filled sNewExt with Q part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Created sNewExt
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: startPartIdx = 22, endPartIdx = 31
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 31
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 31
Debug: sizeQP = 39
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 32
Using Ring Dimension: 131072
Multiplicative depth: 29
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 3, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 11, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 31
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 31
Debug: Processing digit 1 of 3
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing digit 1 of 3
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 1 of 3
Debug: startPartIdx = 22, endPartIdx = 30
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 30
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 29
Debug: sizeP = 8
Debug: sizeQlP = 37
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 29
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 29
Debug: sizeQlP = 37
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 37, format: 0
Debug: cTilda1 elements: 37, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 37
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 37
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 28
Debug: sizeP = 8
Debug: sizeQlP = 36
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 28
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 28
Debug: sizeQlP = 36
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 36, format: 0
Debug: cTilda1 elements: 36, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 36
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 36
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 28
Debug: sizeP = 8
Debug: sizeQlP = 36
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 28
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 28
Debug: sizeQlP = 36
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 36, format: 0
Debug: cTilda1 elements: 36, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 36
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 36
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 28
Debug: sizeP = 8
Debug: sizeQlP = 36
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 28
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 28
Debug: sizeQlP = 36
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 36, format: 0
Debug: cTilda1 elements: 36, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 36
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 36
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 8
Debug: sizeQlP = 35
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 35
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 35, format: 0
Debug: cTilda1 elements: 35, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 35
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 35
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 8
Debug: sizeQlP = 34
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 34
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 8
Debug: sizeQlP = 33
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 33
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 8
Debug: sizeQlP = 33
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 33
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 8
Debug: sizeQlP = 33
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 33
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 8
Debug: sizeQlP = 32
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 32
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 8
Debug: sizeQlP = 31
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 31
Debug: sizeQ = 31
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 8
Debug: sizeQlP = 30
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 30
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 8
Debug: sizeQlP = 30
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 30
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 8
Debug: sizeQlP = 30
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 30
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 8
Debug: sizeQlP = 29
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 29
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 8
Debug: sizeQlP = 28
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 28
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 8
Debug: sizeQlP = 27
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 27
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 8
Debug: sizeQlP = 27
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 27
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 8
Debug: sizeQlP = 27
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 27
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 8
Debug: sizeQlP = 26
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 26
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 8
Debug: sizeQlP = 25
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 25
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 8
Debug: sizeQlP = 22
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 22
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 8
Debug: sizeQlP = 22
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 22
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 8
Debug: sizeQlP = 22
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 22
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 8
Debug: sizeQlP = 22
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 22
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 8
Debug: sizeQlP = 22
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 22
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 31
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 8
Debug: sizeQlP = 13
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 13
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 8
Debug: sizeQlP = 13
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 13
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 31
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed

Performance Analysis:
Execution time: 39811 ms

Error Analysis:
Maximum error: 1.64307e-06 (log2: -19.2152)
Average error: 6.4613e-07 (log2: -20.5617)
Number of errors larger than 0.01: 0
[       OK ] HybridSort/HybridSortTestFixture/3.SortHybridTest (53876 ms)
[----------] 1 test from HybridSort/HybridSortTestFixture/3 (53876 ms total)

[----------] 1 test from HybridSort/HybridSortTestFixture/4, where TypeParam = std::integral_constant<unsigned long,64ul>
[ RUN      ] HybridSort/HybridSortTestFixture/4.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)32
Debug: sizeQP = 40

Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNew format to COEFFICIENTDebug: Set sNew format to COEFFICIENT

Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with Q part
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNew format to COEFFICIENT
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Created sNewExt
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 32
Debug: sizeQP = 40
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 64
Using Ring Dimension: 131072
Multiplicative depth: 30
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 3, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: sizePartQl = 11, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 1
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing digit decomposition part 1
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = Debug: sizePartQl = 11, startPartIdx = 1111, startPartIdx = 
11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 10, startPartIdx = 22
Debug: sizePartQl = 10, startPartIdx = 22
Debug: sizePartQl = 10, startPartIdx = 22
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Processing digit 0 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Processing digit 0 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: EvalFastKeySwitchCore completed
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: KeySwitchInPlace completed
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: Processing CRT basis switching part 1
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 22, endPartIdx = 31
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing CRT basis switching part 2
Debug: EvalKeySwitchPrecomputeCore completed
Debug: Processing CRT basis switching part 2
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing digit 0 of 3
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 31
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 29
Debug: sizeP = 8
Debug: sizeQlP = 37
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 29
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 29
Debug: sizeQlP = 37
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 37, format: 0
Debug: cTilda1 elements: 37, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 37
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 37
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 29
Debug: sizeP = 8
Debug: sizeQlP = 37
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 29
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 29
Debug: sizeQlP = 37
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 37, format: 0
Debug: cTilda1 elements: 37, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 37
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 37
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 29
Debug: sizeP = 8
Debug: sizeQlP = 37
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 29
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 29
Debug: sizeQlP = 37
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 37, format: 0
Debug: cTilda1 elements: 37, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 37
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 37
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 28
Debug: sizeP = 8
Debug: sizeQlP = 36
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 28
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 28
Debug: sizeQlP = 36
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 36, format: 0
Debug: cTilda1 elements: 36, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 36
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 36
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 8
Debug: sizeQlP = 35
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 35
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 35, format: 0
Debug: cTilda1 elements: 35, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 35
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 35
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 8
Debug: sizeQlP = 34
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 34
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 8
Debug: sizeQlP = 34
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 34
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 8
Debug: sizeQlP = 34
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 34
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 8
Debug: sizeQlP = 33
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 33
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 8
Debug: sizeQlP = 32
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 32
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 8
Debug: sizeQlP = 31
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 31
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 8
Debug: sizeQlP = 31
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 31
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 8
Debug: sizeQlP = 31
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 31
Debug: sizeQ = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 8
Debug: sizeQlP = 30
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 30
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 8
Debug: sizeQlP = 29
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 29
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 8
Debug: sizeQlP = 28
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 28
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 8
Debug: sizeQlP = 28
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 28
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 8
Debug: sizeQlP = 28
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 28
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 8
Debug: sizeQlP = 27
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 27
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 8
Debug: sizeQlP = 26
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 26
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 8
Debug: sizeQlP = 25
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 25
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 8
Debug: sizeQlP = 25
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 25
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 8
Debug: sizeQlP = 25
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 25
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 15
Debug: sizeP = 8
Debug: sizeQlP = 23
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 15
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 15
Debug: sizeQlP = 23
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 23, format: 0
Debug: cTilda1 elements: 23, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 23
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 23
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 8
Debug: sizeQlP = 21
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 21
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 32
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 8
Debug: sizeQlP = 13
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 13
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 8
Debug: sizeQlP = 13
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 13
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 32
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed

Performance Analysis:
Execution time: 52090 ms

Error Analysis:
Maximum error: 6.29414e-06 (log2: -17.2776)
Average error: 1.69681e-06 (log2: -19.1687)
Number of errors larger than 0.01: 0
[       OK ] HybridSort/HybridSortTestFixture/4.SortHybridTest (69384 ms)
[----------] 1 test from HybridSort/HybridSortTestFixture/4 (69385 ms total)

[----------] 1 test from HybridSort/HybridSortTestFixture/5, where TypeParam = std::integral_constant<unsigned long,128ul>
[ RUN      ] HybridSort/HybridSortTestFixture/5.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)Debug: sizeQ = 
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
33Debug: sizeQP = 41

Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = Debug: startPartIdx = 11, endPartIdx = 2211, endPartIdx = 22

Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 33
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = Debug: Set sNewExt format to EVALUATION
3Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0

Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Processing part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Processing part 1
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Processing part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: startPartIdx = 22, endPartIdx = 33
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: Processing part 1
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Completed inner loop for part 2
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing part 2
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 11, endPartIdx = 22
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 33
Debug: sizeQP = 41
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 11
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 128
Using Ring Dimension: 131072
Multiplicative depth: 31
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 3, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: sizePartQl = 11, startPartIdx = 11
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: sizePartQl = 11, startPartIdx = 22
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 22
Debug: sizePartQl = 11, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = Debug: sizePartQl = 2
Debug: Completed digit decomposition
11, startPartIdx = 11
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: Processing CRT basis switching part 0
Debug: sizeQl = 33
Debug: sizeP = 8
Debug: sizeQlP = 41
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 1
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 22
Debug: sizePartQl = 11, startPartIdx = 22
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 11, startPartIdx = 22
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 11, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 11, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 33
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 33
Debug: sizeQlP = 41
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: EvalFastKeySwitchCore completed
Debug: Processing digit 2 of 3
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: EvalFastKeySwitchCore completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 41, format: 0
Debug: cTilda1 elements: 41, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 41
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 41
Debug: EvalFastKeySwitchCore completed
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing digit 0 of 3
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing CRT basis switching part 1
Debug: Processing digit 0 of 3
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 2
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Processing digit 1 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: startPartIdx = 22, endPartIdx = 32
Debug: startPartIdx = 11, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing CRT basis switching part 2
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Processing digit 1 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 1 of 3
Debug: Processing digit 0 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Processing digit 1 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Processing CRT basis switching part 2
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = Debug: Completed ApproxSwitchCRTBasis for part 20
Debug: Calling KeySwitchCore with cv[1]

Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 0
Debug: Processing digit 2 of 3
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 32
Debug: sizeP = 8
Debug: sizeQlP = 40
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 10
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: sizePartQl = 10, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: startPartIdx = 22, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 32
Debug: Processing digit 1 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 32
Debug: sizeQlP = 40
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 1 of 3
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: EvalFastKeySwitchCore completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 40, format: 0
Debug: cTilda1 elements: 40, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 40
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size Debug: Created result vector with size 22

Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 31
Debug: sizeP = 8
Debug: sizeQlP = 39
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 31
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 31
Debug: sizeQlP = 39
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 39, format: 0
Debug: cTilda1 elements: 39, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 39
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 39
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 30
Debug: sizeP = 8
Debug: sizeQlP = 38
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 30
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 30
Debug: sizeQlP = 38
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 38, format: 0
Debug: cTilda1 elements: 38, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 38
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 38
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 29
Debug: sizeP = 8
Debug: sizeQlP = 37
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 29
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 29
Debug: sizeQlP = 37
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 37, format: 0
Debug: cTilda1 elements: 37, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 37
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 37
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 28
Debug: sizeP = 8
Debug: sizeQlP = 36
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 28
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 28
Debug: sizeQlP = 36
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 36, format: 0
Debug: cTilda1 elements: 36, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 36
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 36
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 8
Debug: sizeQlP = 35
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 35
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 35, format: 0
Debug: cTilda1 elements: 35, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 35
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 35
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 8
Debug: sizeQlP = 35
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 35
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 35, format: 0
Debug: cTilda1 elements: 35, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 35
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 35
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 27
Debug: sizeP = 8
Debug: sizeQlP = 35
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 27
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 27
Debug: sizeQlP = 35
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 35, format: 0
Debug: cTilda1 elements: 35, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 35
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 35
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 26
Debug: sizeP = 8
Debug: sizeQlP = 34
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 26
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 26
Debug: sizeQlP = 34
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 34, format: 0
Debug: cTilda1 elements: 34, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 34
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 34
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 25
Debug: sizeP = 8
Debug: sizeQlP = 33
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 25
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 25
Debug: sizeQlP = 33
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 33, format: 0
Debug: cTilda1 elements: 33, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 33
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 33
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 8
Debug: sizeQlP = 32
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 32
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 8
Debug: sizeQlP = 32
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 32
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 24
Debug: sizeP = 8
Debug: sizeQlP = 32
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 24
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 24
Debug: sizeQlP = 32
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 32, format: 0
Debug: cTilda1 elements: 32, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 32
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 32
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 23
Debug: sizeP = 8
Debug: sizeQlP = 31
Debug: alpha = 11
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 22
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 22, endPartIdx = 23
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 23
Debug: sizeQlP = 31
Debug: sizeQ = 33
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 31, format: 0
Debug: cTilda1 elements: 31, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 31
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 31
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 22
Debug: sizeP = 8
Debug: sizeQlP = 30
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 22
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 22
Debug: sizeQlP = 30
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 30, format: 0
Debug: cTilda1 elements: 30, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 30
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 30
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 8
Debug: sizeQlP = 29
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 29
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 8
Debug: sizeQlP = 29
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 29
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 21
Debug: sizeP = 8
Debug: sizeQlP = 29
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 21
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 21
Debug: sizeQlP = 29
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 29, format: 0
Debug: cTilda1 elements: 29, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 29
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 29
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 20
Debug: sizeP = 8
Debug: sizeQlP = 28
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 20
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 20
Debug: sizeQlP = 28
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 28, format: 0
Debug: cTilda1 elements: 28, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 28
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 28
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 19
Debug: sizeP = 8
Debug: sizeQlP = 27
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 19
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 19
Debug: sizeQlP = 27
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 27, format: 0
Debug: cTilda1 elements: 27, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 27
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 27
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 8
Debug: sizeQlP = 26
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 26
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 8
Debug: sizeQlP = 26
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 26
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 18
Debug: sizeP = 8
Debug: sizeQlP = 26
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 18
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 18
Debug: sizeQlP = 26
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 26, format: 0
Debug: cTilda1 elements: 26, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 26
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 26
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 17
Debug: sizeP = 8
Debug: sizeQlP = 25
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 17
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 17
Debug: sizeQlP = 25
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 25, format: 0
Debug: cTilda1 elements: 25, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 25
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 25
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 16
Debug: sizeP = 8
Debug: sizeQlP = 24
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 16
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 16
Debug: sizeQlP = 24
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 24, format: 0
Debug: cTilda1 elements: 24, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 24
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 24
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 14
Debug: sizeP = 8
Debug: sizeQlP = 22
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 14
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 14
Debug: sizeQlP = 22
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 22, format: 0
Debug: cTilda1 elements: 22, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 22
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 22
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 8
Debug: sizeQlP = 21
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 21
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 13
Debug: sizeP = 8
Debug: sizeQlP = 21
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 2
Debug: sizePartQl = 2, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 13
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 13
Debug: sizeQlP = 21
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 21, format: 0
Debug: cTilda1 elements: 21, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 21
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 21
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 12
Debug: sizeP = 8
Debug: sizeQlP = 20
Debug: alpha = 11
Debug: numPartQl = 2
Debug: Created partsCt with size 2
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 1
Debug: sizePartQl = 1, startPartIdx = 11
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 11, endPartIdx = 12
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 12
Debug: sizeQlP = 20
Debug: sizeQ = 33
Debug: Processing digit 0 of 2
Debug: Processing digit 1 of 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 20, format: 0
Debug: cTilda1 elements: 20, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 20
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 20
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 11
Debug: sizeP = 8
Debug: sizeQlP = 19
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 11
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 11
Debug: sizeQlP = 19
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 19, format: 0
Debug: cTilda1 elements: 19, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 19
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 19
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 10
Debug: sizeP = 8
Debug: sizeQlP = 18
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 10
Debug: sizePartQl = 10, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 10
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 10
Debug: sizeQlP = 18
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 18, format: 0
Debug: cTilda1 elements: 18, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 18
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 18
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 9
Debug: sizeP = 8
Debug: sizeQlP = 17
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 9
Debug: sizePartQl = 9, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 9
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 9
Debug: sizeQlP = 17
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 17, format: 0
Debug: cTilda1 elements: 17, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 17
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 17
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 8
Debug: sizeQlP = 13
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 13
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 8
Debug: sizeP = 8
Debug: sizeQlP = 16
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 8
Debug: sizePartQl = 8, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 8
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 8
Debug: sizeQlP = 16
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 16, format: 0
Debug: cTilda1 elements: 16, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 16
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 16
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 7
Debug: sizeP = 8
Debug: sizeQlP = 15
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 7
Debug: sizePartQl = 7, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 7
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 7
Debug: sizeQlP = 15
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 15, format: 0
Debug: cTilda1 elements: 15, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 15
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 15
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 6
Debug: sizeP = 8
Debug: sizeQlP = 14
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 6
Debug: sizePartQl = 6, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 6
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 6
Debug: sizeQlP = 14
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 14, format: 0
Debug: cTilda1 elements: 14, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 14
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 14
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 5
Debug: sizeP = 8
Debug: sizeQlP = 13
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 5
Debug: sizePartQl = 5, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 5
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 5
Debug: sizeQlP = 13
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 13, format: 0
Debug: cTilda1 elements: 13, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 13
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 13
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 4
Debug: sizeP = 8
Debug: sizeQlP = 12
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 4
Debug: sizePartQl = 4, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 4
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 4
Debug: sizeQlP = 12
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 12, format: 0
Debug: cTilda1 elements: 12, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 12
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 12
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 3
Debug: sizeP = 8
Debug: sizeQlP = 11
Debug: alpha = 11
Debug: numPartQl = 1
Debug: Created partsCt with size 1
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 3
Debug: sizePartQl = 3, startPartIdx = 0
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 3
Debug: sizeQlP = 11
Debug: sizeQ = 33
Debug: Processing digit 0 of 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 11, format: 0
Debug: cTilda1 elements: 11, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 11
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 11
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed

Performance Analysis:
Execution time: 73822 ms

Error Analysis:
Maximum error: 1.27664e-05 (log2: -16.2573)
Average error: 2.95053e-06 (log2: -18.3706)
Number of errors larger than 0.01: 0
[       OK ] HybridSort/HybridSortTestFixture/5.SortHybridTest (95741 ms)
[----------] 1 test from HybridSort/HybridSortTestFixture/5 (95741 ms total)

[----------] 1 test from HybridSort/HybridSortTestFixture/6, where TypeParam = std::integral_constant<unsigned long,256ul>
[ RUN      ] HybridSort/HybridSortTestFixture/6.SortHybridTest
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with P part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Created sNewExt
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: Set sNewExt format to EVALUATION
Debug: numPerPartQ = Debug: numPartQ = 16
Debug: Processing part 0
3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Created sNewExt
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Created sNewExt
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 32, endPartIdx = 46
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed inner loop for part 2
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Filled sNewExt with Q part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 2
Debug: Processing part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Filled sNewExt with P part
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 1
Debug: Processing part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 1
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Filled sNewExt with P part
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 0
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Processing part 1
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 1
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Processing part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 2
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Filled sNewExt with P part
Debug: startPartIdx = 32, endPartIdx = 46
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Set sNew format to COEFFICIENT
Debug: Filled sNewExt with Q part
Debug: Created sNewExt
Debug: Filled sNewExt with P part
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed inner loop for part 2
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 0
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Processing part 1
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: Completed inner loop for part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 0
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Processing part 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: Completed inner loop for part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Debug: Completed all parts
Debug: Set vectors in ek
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Using KeySwitchHYBRID::KeySwitchGenInternal (2 keys)
Using KeySwitchHYBRID::KeySwitchGenInternal (3 params)
Debug: sizeQ = 46
Debug: sizeQP = 57
Debug: Set sNew format to COEFFICIENT
Debug: Created sNewExt
Debug: Filled sNewExt with Q part
Debug: Filled sNewExt with P part
Debug: Set sNewExt format to EVALUATION
Debug: numPartQ = 3
Debug: numPerPartQ = 16
Debug: Processing part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed inner loop for part 0
Debug: Processing part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed inner loop for part 1
Debug: Processing part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed inner loop for part 2
Debug: Completed all parts
Debug: Set vectors in ek
Input array size: 256
Using Ring Dimension: 131072
Multiplicative depth: 44
Scaling Mod: 40
Sign Configuration: CompositeSign(3, 4, 2)
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: sizePartQl = 16, startPartIdx = 16
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 16, startPartIdx = 16
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 14, startPartIdx = 32
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing digit decomposition part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 14, startPartIdx = 32
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: Completed digit decomposition
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: Processing CRT basis switching part 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: sizePartQl = 16, startPartIdx = 16
Debug: sizePartQl = 16, startPartIdx = 16
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing CRT basis switching part 1
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizePartQl = 16, startPartIdx = 16
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed ApproxSwitchCRTBasis for part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 46
Debug: sizeP = 11
Debug: sizeQlP = 57
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: Processing CRT basis switching part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 14
Debug: sizePartQl = 14, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 0, endPartIdx = 16
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 1
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = Debug: Completed ApproxSwitchCRTBasis for part 462

Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 0 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: startPartIdx = 16, endPartIdx = 32
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing digit 0 of 3
Debug: startPartIdx = 16, endPartIdx = 32
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Processing CRT basis switching part 2
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Processing digit 1 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing digit 2 of 3
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: EvalKeySwitchPrecomputeCore completed
Debug: Processing digit 0 of 3
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 2 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: Processing digit 1 of 3
Debug: startPartIdx = 32, endPartIdx = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 46
Debug: sizeQlP = 57
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: KeySwitchInPlace completed
Debug: Processing digit 1 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Processing digit 2 of 3
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Processing digit 2 of 3
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Processing digit 2 of 3
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 57, format: 0
Debug: cTilda1 elements: 57, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 57
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: EvalFastKeySwitchCore completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 57
Debug: Created result vector with size 2
Debug: EvalFastKeySwitchCore completed
Debug: KeySwitchInPlace completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing CRT basis switching part 1
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing digit 1 of 3
Debug: startPartIdx = 32, endPartIdx = 45
Debug: Processing CRT basis switching part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: Processing digit 2 of 3
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: startPartIdx = 32, endPartIdx = 45
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: KeySwitchInPlace completed
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: EvalFastKeySwitchCore completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Created result vector with size 2
Debug: Processing digit 1 of 3
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Processing digit 2 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: EvalFastKeySwitchCore completed
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Created result vector with size 2
Debug: Processing CRT basis switching part 1
Debug: KeySwitchInPlace completed
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Processing digit 1 of 3
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Debug: Completed ApproxSwitchCRTBasis for part 0
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: startPartIdx = 0, endPartIdx = 16
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: KeySwitchInPlace completed
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Processing CRT basis switching part 1
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: Processing CRT basis switching part 2
Debug: Processing CRT basis switching part 1
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Processing digit 1 of 3
Debug: Processing digit 1 of 3
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Processing digit 2 of 3
Debug: Processing digit 2 of 3
Debug: Processing digit 1 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: Processing CRT basis switching part 2
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Processing digit 2 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: KeySwitchInPlace completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: EvalFastKeySwitchCore completed
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: EvalFastKeySwitchCore completed
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: KeySwitchInPlace completed
Debug: Processing digit 1 of 3
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: Processing digit 2 of 3
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchInPlace
Debug: ciphertext size = 2
Debug: Calling KeySwitchCore with cv[1]
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 45
Debug: sizeP = 11
Debug: sizeQlP = 56
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 13
Debug: sizePartQl = 13, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 45
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 45
Debug: sizeQlP = 56
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 56, format: 0
Debug: cTilda1 elements: 56, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 56
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 56
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Debug: KeySwitchInPlace completed
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 44
Debug: sizeP = 11
Debug: sizeQlP = 55
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 12
Debug: sizePartQl = 12, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 44
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 44
Debug: sizeQlP = 55
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 55, format: 0
Debug: cTilda1 elements: 55, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 55
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 55
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 43
Debug: sizeP = 11
Debug: sizeQlP = 54
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 43
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 43
Debug: sizeQlP = 54
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 54, format: 0
Debug: cTilda1 elements: 54, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 54
Debug: Before ApproxModDown call for ct1
Debug: (*cTilda)[1] elements: 54
Debug: EvalFastKeySwitchCore completed
Debug: Created result vector with size 2
Using KeySwitchHYBRID::KeySwitchCore
Using KeySwitchHYBRID::EvalKeySwitchPrecomputeCore
Debug: sizeQl = 43
Debug: sizeP = 11
Debug: sizeQlP = 54
Debug: alpha = 16
Debug: numPartQl = 3
Debug: Created partsCt with size 3
Debug: Processing digit decomposition part 0
Debug: sizePartQl = 16, startPartIdx = 0
Debug: Processing digit decomposition part 1
Debug: sizePartQl = 16, startPartIdx = 16
Debug: Processing digit decomposition part 2
Debug: sizePartQl = 11
Debug: sizePartQl = 11, startPartIdx = 32
Debug: Completed digit decomposition
Debug: Processing CRT basis switching part 0
Debug: Completed ApproxSwitchCRTBasis for part 0
Debug: startPartIdx = 0, endPartIdx = 16
Debug: Processing CRT basis switching part 1
Debug: Completed ApproxSwitchCRTBasis for part 1
Debug: startPartIdx = 16, endPartIdx = 32
Debug: Processing CRT basis switching part 2
Debug: Completed ApproxSwitchCRTBasis for part 2
Debug: startPartIdx = 32, endPartIdx = 43
Debug: EvalKeySwitchPrecomputeCore completed
Using KeySwitchHYBRID::EvalFastKeySwitchCore
Using KeySwitchHYBRID::EvalFastKeySwitchCoreExt
Debug: sizeQl = 43
Debug: sizeQlP = 54
Debug: sizeQ = 46
Debug: Processing digit 0 of 3
Debug: Processing digit 1 of 3
Debug: Processing digit 2 of 3
Debug: Final state check in EvalFastKeySwitchCoreExt
Debug: cTilda0 elements: 54, format: 0
Debug: cTilda1 elements: 54, format: 0
Debug: cTilda0 first element isValid: 1
Debug: cTilda1 first element isValid: 1
Debug: Result vector created with size: 2
Debug: EvalFastKeySwitchCoreExt completed
Debug: Before ModDown, cTilda size = 2
Debug: Before ApproxModDown call for ct0
Debug: (*cTilda)[0] elements: 54
